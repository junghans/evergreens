#! /bin/bash

#version 0.1e   27.06.08 -- initial version
#version 0.1f   16.04.08 -- better verion system
#version 0.2    01.10.08 -- added readlink in the name
#version 0.2.1  01.10.08 -- vim70 was outdated
#version 0.3    14.08.09 -- added --editor option

editor=${0##*/f}
editor=$(type -p ${editor:-vim})
usage="Usage: ${0##*/} script <script2> ..."

help () {
  cat << eof
Edit (with vim) content of file after readlink
$usage
OPTIONS:
 --editor CMD   Change editor to use
                Default: $editor
-h, --help      Show this help
-v, --version   Show version

Examples:  ${0##*/} egrep 
           ${0##*/} dvipdf egrep

Send bugs and comment to junghans@mpip-mainz.mpg.de
eof
}

while [ "${1#-}" != "$1" ]; do
 case $1 in
   --editor)
    editor="$2"
    shift 2;; 
   -h | --help)
    help
    exit 0;;
   --hg)
    echo "${0##*/}: $(sed -ne 's/^#version.* -- \(.*$\)/\1/p' $0 | sed -n '$p')"
    exit 0;;
   -v | --version)
    echo "${0##*/}", $(sed -ne 's/^#\(version.*\) -- .*$/\1/p' $0 | sed -n '$p') by C. Junghans
    exit 0;;
  *)
   echo "Unknown option '$1' - ignored" >&2
   exit 1 ;;
 esac
done

if [ -z "$editor" ]; then
  echo NO editor found, use --editor option >&2
  exit 1
fi

if [ -z "$1" ]; then
  echo Usage: ${0##*/} scriptname
  exit
fi

for i in $*; do
  name=$(readlink -f $(type -p $i))
  if [ -z "$name" ]; then
    echo "'$i' not found, try 'type $i'!"
    echo "(because you are in a interactive shell\)!"
    exit
  else
    $editor $name
  fi
done

