#! /bin/bash
#C. Junghans

#version 0.1  05.10.08 -- initial version
#version 0.2  06.10.08 -- added filelist, when missing source_file
#version 0.3  06.10.08 -- allow lines with # in source_file

usage="Usage: ${0##*/} dir"
quiet="no"
opts="-f -v"
cmd="ln -s"
source_file="README"

help () {
  cat << eof
Install all script FROM a dir to .
$usage
OPTIONS:
-c, --command XX    Change operation: 
                    Default: $oper
-i                  Ask before override
-q, --quiet         Be a little bit quiet
-h, --help          Show this help
-v, --version       Show version

This allows you to use local path. The files to
install will be determined by the FILES_TO_INSTALL
section in $source_file or use all scripts there

Examples:  ${0##*/} -c cp \$MYOPT/bin 
           ${0##*/} -q ../scripts


Send bugs and comment to junghans@mpip-mainz.mpg.de
eof
}

while [ "${1#-}" != "$1" ]; do
 if [ "${1#--}" = "$1" ] && [ -n "${1:2}" ]; then
    if [ "${1#-[c]}" != "${1}" ]; then
       set -- "${1:0:2}" "${1:2}" "${@:2}"
    else
       set -- "${1:0:2}" "-${1:2}" "${@:2}"
    fi
 fi
 case $1 in 
   -c | --command)
    if [ -n "$2" ]; then
       cmd=$2
    else
       echo No operation given
       exit 1
    fi
    shift 2;;
   -i)
    opts="${opts/-f/-i}"
    shift ;;
   -q | --quiet)
    opts=${opts/-v/}
    quiet="yes"
    shift ;;
   -h | --help)
    help
    exit 0;;
   --hg)
    echo "${0##*/}: $(sed -ne 's/^#version.* -- \(.*$\)/\1/p' $0 | sed -n '$p')" 
    exit 0;;
   -v | --version)
    echo "${0##*/}", $(sed -ne 's/^#\(version.*\) -- .*$/\1/p' $0 | sed -n '$p') by C. Junghans
    exit 0;;
  *)
   echo Unknown option \'$1\' 
   exit 1;;
 esac
done

if [ -z "$1" ]; then
  echo No dir given !
  echo $usage
  echo Help with -h
  exit 1
fi

[[ -d $1 ]] || { echo \"$dir\" is not a dir >&2; exit 1; }
dir=${1%/}

if [ -f "$dir/$source_file" ]; then
   filelist=$(sed -n '/FILES_TO_INSTALL/,/END_FILES_TO_INSTALL/p' "$dir/$source_file" | sed "/^#/d;1d;\$d;s#^#$dir/#")
else
   filelist=$(find -L $dir -type f -perm "-u=xr" \! -name "*~")
fi

[[ -n "$filelist" ]] || { echo Error: empty filelist >&2; exit 1; }

if [ "$quiet" = "no" ]; then
   echo -n "Files to install: "
   for myfile in $filelist; do
       echo -n "${myfile##*/} "
   done
   echo
   echo From where to install: $dir
fi

for myfile in $filelist; do
   [[ -f $myfile ]] || { echo File \"${myfile##*/}\" not found >&2; exit 1; }	
   echo $cmd $opts $myfile .
done
