#
# C. Junghans
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#version 0.1.0,  28.09.11 -- initial version (after years with version)
#version 0.1.1,  05.10.11 -- fixed cwd problem in povray rule
#version 0.1.2,  22.03.12 -- added gp slide rule
#version 0.1.3,  22.03.12 -- make pov transparent to save space
#version 0.1.4,  10.04.12 -- remove most of gp2eps hacks
#version 0.1.5,  16.05.12 -- removed cirtual deps + gp2eps update
#version 0.1.6,  01.11.12 -- also pack local sty file in make tar
#version 0.1.7,  02.11.12 -- added checks for SCRIPTDIR and ROOTDIR
#version 0.1.8,  30.04.13 -- fail back to git in ROOTDIR if hg root fails
#version 0.2.0,  23.08.13 -- major rework of deps
#version 0.2.0,  04.09.13 -- update make clean

# A Makefile using this include file usually look like this:
#
#SUBDIRS=dir1 dir2
#FIG_PICS=123.eps 456.eps
#GNUPLOT_PICS= plot1.eps plot2.eps
#include ./Makefile.incl
#CLEANFILES=123.d fit.log
#localclean:
#	./clean.sh
#

#SUBDIRS GNUPLOT_PICS and FIG_PICS should be set BEFORE including ./Makefile.incl
all: check_dirs $(SUBDIRS) $(GNUPLOT_PICS) $(FIG_PICS) $(OTHER_PICS)

SHELL=/bin/bash
#in case of svn hardcode the path!
ROOTDIR=$(shell hg root 2>/dev/null || git rev-parse --show-toplevel 2> /dev/null)
SCRIPTDIR=$(ROOTDIR)/scripts

LATEXMK=$(SCRIPTDIR)/latexmk.pl
GP2EPS=$(SCRIPTDIR)/gp2eps

#Useful defaults can be overwritten from outside - make GNUPLOT=gnuplot48 or in Makefile
GNUPLOT?=gnuplot
GPOPTS?=--gnuplot $(GNUPLOT) -p 10 --margins ,0.9,0.5, --force
POVOPTS?= -D +A -W800 -H800
#'--halt-on-error' to avoid interactive prompting
LATEXMKOPTS?=-e '$$latex=q/latex --halt-on-error %O %S/'

.PHONY: clean subdirclean localclean gpclean figclean dummy root root_quick all check_dirs

check_dirs:
	@[ -d "$(ROOTDIR)" ] || ( echo ROOTDIR variable in Makefile.incl seems to be wrong; exit 1; )
	@[ -d "$(SCRIPTDIR)" ] || ( echo SCRIPTDIR variable in Makefile.incl seems to be wrong; exit 1; )

dummy: ;

root:
	$(MAKE) $(MFLAGS) -C $(ROOTDIR) all

root_quick:
	$(MAKE) $(MFLAGS) -C $(ROOTDIR) quick

%.pdf: %.dvi
	dvipdf $< $*_shadow.pdf
	mv $*_shadow.pdf $@

%.ps: %.dvi
	dvips $<

#make it depend on dummy to run LATEXMK everytime, it will check subdirs first
%.dvi: %.tex $(SUBDIRS) dummy
	@#rm target if latexmk failed, worked better than DELETE_ON_ERROR
	$(LATEXMK) $(LATEXMKOPTS) -dvi $< || rm -f $@
	@#rm has exit code 0
	@[ -f $@ ]

%.tar.gz: %.pdf $(TARFILES)
	@#dirty sed hack ahead to grep files used by latexmk to produce the pdf
	@#do not pack gobal files (begining with /)
	tar cvzhf $@ $+ \
  		`sed -n 's/^[[:space:]]*"\([^/][^"]*\.\(bib\|tex\|eps\|cls\|sty\)\)".*$$/\1/p' $*.fdb_latexmk`

%.eps: %.gp .deps.gpopts $(GP2EPS)
	$(GP2EPS) $(GPOPTS) $<

.deps.gpopts: dummy
	@[ -f $@ ] || touch $@
	@echo "GPOPTS=$(GPOPTS)" | cmp -s $@ - || echo "GPOPTS=$(GPOPTS)" > $@

%.eps: %.tex
	@[ ! -f $*.gp ] || ( echo "$*.gp was found, but the '.tex to .eps' rule was called! That means, you have to remove $*.gp or $*.tex first!"; exit 1; )
	latex -halt-on-error $<
	latex -halt-on-error $<
	dvips -E $*.dvi -o $@
	rm -f $*.log $*.aux $*.dvi

%.png: %.pov .deps.povopts
	@#povray can only write to cwd
	cd $(<D); \
	povray $(POVOPTS) $(<F)
	convert $@ -transparent white $@

.deps.povopts: dummy
	@[ -f $@ ] || touch $@
	@echo "POVOPTS=$(POVOPTS)" | cmp -s $@ - || echo "POVOPTS=$(POVOPTS)" > $@

%.eps: %.jpg
	convert $< $@

%.eps: %.png
	convert $< -transparent white -trim $@

%.eps: %.gif
	convert $< $@

%.eps: %.pdf
	convert $< $@

%.eps: %.tiff
	convert $< $@

%.eps: %.fig
	fig2dev -L eps $< $@

GP_DEPS=$(patsubst %,.deps.%,$(GNUPLOT_PICS))
#if we have gp pics here
ifneq "$(strip $(GNUPLOT_PICS))" ""
gpclean:
	rm -f $(GNUPLOT_PICS) $(GP_DEPS) .deps.gpopts gp2eps_tmp*
ifneq "$(MAKECMDGOALS)" "clean"
-include $(GP_DEPS)
endif
endif

.deps.%.eps: %.gp $(GP2EPS)
	$(GP2EPS) --deps $< > $@

FIG_DEPS=$(patsubst %,.deps.%,$(FIG_PICS))
#if we have fig pics here
ifneq "$(strip $(FIG_PICS))" ""
figclean:
	rm -rf $(FIG_PICS) $(FIG_DEPS)
ifneq "$(MAKECMDGOALS)" "clean"
-include $(FIG_DEPS)
endif
endif

.deps.%.eps: %.fig
	@echo Scanning $< for deps
	@sed -n 's/^[[:space:]]*[0-9] \(.*\).\(eps\|png\|gif\)$$/ \1.\2/p' $< | tr -d '\n' | sed -e "s/^/$<:/" -e 's/fig/eps/' > $@

.PHONY: $(SUBDIRS)
$(SUBDIRS):
	$(MAKE) $(MFLAGS) -C $@

subdirclean:
	@for i in $(SUBDIRS); do \
	  echo $(MAKE) $(MFLAGS) -C $$i clean; \
	  $(MAKE) $(MFLAGS) -C $$i clean || exit 1; \
	done

clean: subdirclean gpclean figclean localclean
	rm -f *~ *.bak *.aux $(CLEANFILES) $(OTHER_PICS) .deps.povopts
